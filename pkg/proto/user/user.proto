syntax = "proto3";
import "Open_IM/pkg/proto/sdk_ws/ws.proto";
option go_package = "./user;user";
package user;

message CommonResp{
  int32  errCode = 1;
  string errMsg = 2;
}

message DeleteUsersReq{
  repeated string  DeleteUserIDList = 2;
  string OpUserID = 3;
  string OperationID = 4;
}
message DeleteUsersResp{
  CommonResp  CommonResp = 1;
  repeated string FailedUserIDList = 2;
}


message GetAllUserIDReq{
  string opUserID = 1;
  string operationID = 2;
}
message GetAllUserIDResp{
  CommonResp  CommonResp = 1;
  repeated string UserIDList = 2;
}


message AccountCheckReq{
  repeated string CheckUserIDList = 1;
  string OpUserID = 2;
  string OperationID = 3;

}
message AccountCheckResp{
  CommonResp  commonResp = 1;
  message SingleUserStatus {
    string userID = 1;
    string accountStatus = 2;
  }
  repeated SingleUserStatus ResultList = 2;
}


message GetUserInfoReq{
  repeated string userIDList = 1;
  string OpUserID = 2;
  string OperationID = 3;
}
message GetUserInfoResp{
  CommonResp  commonResp = 1;
  repeated server_api_params.UserInfo UserInfoList = 3;
}



message UpdateUserInfoReq{
  server_api_params.UserInfo UserInfo = 1;
  string OpUserID = 2;
  string  operationID = 3;
}
message UpdateUserInfoResp{
  CommonResp  commonResp = 1;
}


message SetReceiveMessageOptReq{
  string FromUserID = 1;
  int32  opt = 2;
  repeated string conversationIDList = 3;
  string  operationID = 4;
  string OpUserID = 5;
}
message OptResult{
  string conversationID = 1;
  int32 result = 2; //-1: failed;  0:default; 1: not receive ; 2: not jpush
}
message SetReceiveMessageOptResp{
  CommonResp  commonResp = 1;
  repeated OptResult conversationOptResultList = 2;
}


message GetReceiveMessageOptReq{
  string FromUserID = 1;
  repeated string conversationIDList = 2;
  string  operationID = 3;
  string OpUserID = 4;
}
message GetReceiveMessageOptResp{
  CommonResp  commonResp = 1;
  repeated OptResult conversationOptResultList = 3;
}


message GetAllConversationMsgOptReq{
  string FromUserID = 1;
  string  operationID = 2;
  string OpUserID = 3;
}
message GetAllConversationMsgOptResp{
  CommonResp  commonResp = 1;
  repeated OptResult conversationOptResultList = 3;
}


service user {
  rpc GetUserInfo(GetUserInfoReq) returns(GetUserInfoResp);
  rpc UpdateUserInfo(UpdateUserInfoReq) returns(UpdateUserInfoResp);
  rpc DeleteUsers(DeleteUsersReq)returns(DeleteUsersResp);
  rpc GetAllUserID(GetAllUserIDReq)returns(GetAllUserIDResp);
  rpc SetReceiveMessageOpt(SetReceiveMessageOptReq)returns(SetReceiveMessageOptResp);
  rpc GetReceiveMessageOpt(GetReceiveMessageOptReq)returns(GetReceiveMessageOptResp);
  rpc GetAllConversationMsgOpt(GetAllConversationMsgOptReq)returns(GetAllConversationMsgOptResp);
  rpc AccountCheck(AccountCheckReq)returns(AccountCheckResp);
}
