syntax = "proto3";
import "Open_IM/pkg/proto/sdk_ws/ws.proto";
option go_package = "./friend;friend";
package friend;

message CommonResp{
  int32   errCode = 1;
  string  errMsg = 2;
}

message CommID{
  string OpUserID = 1;
  string OperationID = 2;
  string ToUserID = 4;
  string FromUserID = 5;
}

message GetFriendsInfoReq{
    CommID CommID = 1;
}

message GetFriendInfoResp{
  int32  ErrCode = 1;
  string ErrMsg = 2;
  FriendInfo Data = 3;
}

message FriendInfo{
  string OwnerUserID = 1;
  string Remark = 2;
  uint64 CreateTime = 3;
  open_im_sdk.UserInfo FriendUser = 4;
  int32 IsBlack = 5;
}


message AddFriendReq{
  CommID CommID = 1;
  string ReqMessage = 2;
}

message ImportFriendReq{
  repeated string FriendUserIDList = 1;
  string  OperationID = 2;
  string FromUserID = 3;
  string OpUserID = 4;
}

message ImportFriendResp{
  CommonResp commonResp = 1;
  repeated string failedUidList = 2;
}

message GetFriendApplyReq{
  CommID CommID = 1;
}
message GetFriendApplyResp{
  int32   ErrCode = 1;
  string  ErrMsg = 2;
  repeated ApplyUserInfo data = 4;
}

message ApplyUserInfo{
  open_im_sdk.PublicUserInfo UserInfo = 1;
  int64   applyTime = 2;
  string   reqMessage = 3;
  int32 Flag = 4;
}


message getFriendListReq{
    CommID CommID = 1;
}

message getFriendListResp{
  int32   ErrCode = 1;
  string  ErrMsg = 2;
  repeated FriendInfo Data = 3;
}


message AddBlacklistReq{
    CommID CommID = 1;
}


message RemoveBlacklistReq{
  CommID CommID = 1;
}


message GetBlacklistReq{
  CommID CommID = 1;
}

message GetBlacklistResp{
  int32   ErrCode = 1;
  string  ErrMsg = 2;
  repeated open_im_sdk.PublicUserInfo data = 3;
}

message IsFriendReq{
  CommID CommID = 1;
}

message IsFriendResp{
  int32   ErrCode = 1;
  string  ErrMsg = 2;
  int32   ShipType = 3;
}

message IsInBlackListReq{
  CommID CommID = 1;
}

message IsInBlackListResp{
  int32   ErrCode = 1;
  string  ErrMsg = 2;
  bool    Response = 3;
}

message DeleteFriendReq{
  CommID CommID = 1;
}


message AddFriendResponseReq{
  CommID CommID = 1;
  int32  flag = 2;
}

message SetFriendCommentReq{
  CommID CommID = 1;
  string Remark = 2;
}

service friend{
  rpc getFriendsInfo(GetFriendsInfoReq) returns(GetFriendInfoResp);
  rpc addFriend(AddFriendReq) returns(CommonResp);
  rpc getFriendApplyList(GetFriendApplyReq) returns(GetFriendApplyResp);
  rpc getSelfApplyList(GetFriendApplyReq) returns(GetFriendApplyResp);
  rpc getFriendList(getFriendListReq) returns(getFriendListResp);
  rpc addBlacklist(AddBlacklistReq) returns(CommonResp);
  rpc removeBlacklist(RemoveBlacklistReq) returns(CommonResp);
  rpc isFriend(IsFriendReq) returns(IsFriendResp);
  rpc isInBlackList(IsInBlackListReq) returns(IsInBlackListResp);
  rpc getBlacklist(GetBlacklistReq) returns(GetBlacklistResp);
  rpc deleteFriend(DeleteFriendReq) returns(CommonResp);
  rpc addFriendResponse(AddFriendResponseReq) returns(CommonResp);
  rpc setFriendComment(SetFriendCommentReq) returns(CommonResp);
  rpc ImportFriend(ImportFriendReq)  returns(ImportFriendResp);
}