// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat/chat.proto

package pbChat // import "./chat"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sdk_ws "Open_IM/pkg/proto/sdk_ws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgDataToMQ struct {
	Token                string          `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	OperationID          string          `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	MsgData              *sdk_ws.MsgData `protobuf:"bytes,3,opt,name=msgData" json:"msgData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MsgDataToMQ) Reset()         { *m = MsgDataToMQ{} }
func (m *MsgDataToMQ) String() string { return proto.CompactTextString(m) }
func (*MsgDataToMQ) ProtoMessage()    {}
func (*MsgDataToMQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{0}
}
func (m *MsgDataToMQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDataToMQ.Unmarshal(m, b)
}
func (m *MsgDataToMQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDataToMQ.Marshal(b, m, deterministic)
}
func (dst *MsgDataToMQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDataToMQ.Merge(dst, src)
}
func (m *MsgDataToMQ) XXX_Size() int {
	return xxx_messageInfo_MsgDataToMQ.Size(m)
}
func (m *MsgDataToMQ) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDataToMQ.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDataToMQ proto.InternalMessageInfo

func (m *MsgDataToMQ) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MsgDataToMQ) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *MsgDataToMQ) GetMsgData() *sdk_ws.MsgData {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type MsgDataToDB struct {
	MsgData              *sdk_ws.MsgData `protobuf:"bytes,1,opt,name=msgData" json:"msgData,omitempty"`
	OperationID          string          `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MsgDataToDB) Reset()         { *m = MsgDataToDB{} }
func (m *MsgDataToDB) String() string { return proto.CompactTextString(m) }
func (*MsgDataToDB) ProtoMessage()    {}
func (*MsgDataToDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{1}
}
func (m *MsgDataToDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDataToDB.Unmarshal(m, b)
}
func (m *MsgDataToDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDataToDB.Marshal(b, m, deterministic)
}
func (dst *MsgDataToDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDataToDB.Merge(dst, src)
}
func (m *MsgDataToDB) XXX_Size() int {
	return xxx_messageInfo_MsgDataToDB.Size(m)
}
func (m *MsgDataToDB) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDataToDB.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDataToDB proto.InternalMessageInfo

func (m *MsgDataToDB) GetMsgData() *sdk_ws.MsgData {
	if m != nil {
		return m.MsgData
	}
	return nil
}

func (m *MsgDataToDB) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type PushMsgDataToMQ struct {
	OperationID          string          `protobuf:"bytes,1,opt,name=OperationID" json:"OperationID,omitempty"`
	MsgData              *sdk_ws.MsgData `protobuf:"bytes,2,opt,name=msgData" json:"msgData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PushMsgDataToMQ) Reset()         { *m = PushMsgDataToMQ{} }
func (m *PushMsgDataToMQ) String() string { return proto.CompactTextString(m) }
func (*PushMsgDataToMQ) ProtoMessage()    {}
func (*PushMsgDataToMQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{2}
}
func (m *PushMsgDataToMQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMsgDataToMQ.Unmarshal(m, b)
}
func (m *PushMsgDataToMQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMsgDataToMQ.Marshal(b, m, deterministic)
}
func (dst *PushMsgDataToMQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMsgDataToMQ.Merge(dst, src)
}
func (m *PushMsgDataToMQ) XXX_Size() int {
	return xxx_messageInfo_PushMsgDataToMQ.Size(m)
}
func (m *PushMsgDataToMQ) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMsgDataToMQ.DiscardUnknown(m)
}

var xxx_messageInfo_PushMsgDataToMQ proto.InternalMessageInfo

func (m *PushMsgDataToMQ) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *PushMsgDataToMQ) GetMsgData() *sdk_ws.MsgData {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type PullMessageReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID" json:"UserID,omitempty"`
	SeqBegin             int64    `protobuf:"varint,2,opt,name=SeqBegin" json:"SeqBegin,omitempty"`
	SeqEnd               int64    `protobuf:"varint,3,opt,name=SeqEnd" json:"SeqEnd,omitempty"`
	OperationID          string   `protobuf:"bytes,4,opt,name=OperationID" json:"OperationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullMessageReq) Reset()         { *m = PullMessageReq{} }
func (m *PullMessageReq) String() string { return proto.CompactTextString(m) }
func (*PullMessageReq) ProtoMessage()    {}
func (*PullMessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{3}
}
func (m *PullMessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullMessageReq.Unmarshal(m, b)
}
func (m *PullMessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullMessageReq.Marshal(b, m, deterministic)
}
func (dst *PullMessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullMessageReq.Merge(dst, src)
}
func (m *PullMessageReq) XXX_Size() int {
	return xxx_messageInfo_PullMessageReq.Size(m)
}
func (m *PullMessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PullMessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_PullMessageReq proto.InternalMessageInfo

func (m *PullMessageReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *PullMessageReq) GetSeqBegin() int64 {
	if m != nil {
		return m.SeqBegin
	}
	return 0
}

func (m *PullMessageReq) GetSeqEnd() int64 {
	if m != nil {
		return m.SeqEnd
	}
	return 0
}

func (m *PullMessageReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type PullMessageResp struct {
	ErrCode              int32           `protobuf:"varint,1,opt,name=ErrCode" json:"ErrCode,omitempty"`
	ErrMsg               string          `protobuf:"bytes,2,opt,name=ErrMsg" json:"ErrMsg,omitempty"`
	MaxSeq               int64           `protobuf:"varint,3,opt,name=MaxSeq" json:"MaxSeq,omitempty"`
	MinSeq               int64           `protobuf:"varint,4,opt,name=MinSeq" json:"MinSeq,omitempty"`
	SingleUserMsg        []*GatherFormat `protobuf:"bytes,5,rep,name=SingleUserMsg" json:"SingleUserMsg,omitempty"`
	GroupUserMsg         []*GatherFormat `protobuf:"bytes,6,rep,name=GroupUserMsg" json:"GroupUserMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PullMessageResp) Reset()         { *m = PullMessageResp{} }
func (m *PullMessageResp) String() string { return proto.CompactTextString(m) }
func (*PullMessageResp) ProtoMessage()    {}
func (*PullMessageResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{4}
}
func (m *PullMessageResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullMessageResp.Unmarshal(m, b)
}
func (m *PullMessageResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullMessageResp.Marshal(b, m, deterministic)
}
func (dst *PullMessageResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullMessageResp.Merge(dst, src)
}
func (m *PullMessageResp) XXX_Size() int {
	return xxx_messageInfo_PullMessageResp.Size(m)
}
func (m *PullMessageResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PullMessageResp.DiscardUnknown(m)
}

var xxx_messageInfo_PullMessageResp proto.InternalMessageInfo

func (m *PullMessageResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *PullMessageResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *PullMessageResp) GetMaxSeq() int64 {
	if m != nil {
		return m.MaxSeq
	}
	return 0
}

func (m *PullMessageResp) GetMinSeq() int64 {
	if m != nil {
		return m.MinSeq
	}
	return 0
}

func (m *PullMessageResp) GetSingleUserMsg() []*GatherFormat {
	if m != nil {
		return m.SingleUserMsg
	}
	return nil
}

func (m *PullMessageResp) GetGroupUserMsg() []*GatherFormat {
	if m != nil {
		return m.GroupUserMsg
	}
	return nil
}

type PullMessageBySeqListReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID" json:"UserID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=OperationID" json:"OperationID,omitempty"`
	SeqList              []int64  `protobuf:"varint,3,rep,packed,name=seqList" json:"seqList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullMessageBySeqListReq) Reset()         { *m = PullMessageBySeqListReq{} }
func (m *PullMessageBySeqListReq) String() string { return proto.CompactTextString(m) }
func (*PullMessageBySeqListReq) ProtoMessage()    {}
func (*PullMessageBySeqListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{5}
}
func (m *PullMessageBySeqListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullMessageBySeqListReq.Unmarshal(m, b)
}
func (m *PullMessageBySeqListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullMessageBySeqListReq.Marshal(b, m, deterministic)
}
func (dst *PullMessageBySeqListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullMessageBySeqListReq.Merge(dst, src)
}
func (m *PullMessageBySeqListReq) XXX_Size() int {
	return xxx_messageInfo_PullMessageBySeqListReq.Size(m)
}
func (m *PullMessageBySeqListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PullMessageBySeqListReq.DiscardUnknown(m)
}

var xxx_messageInfo_PullMessageBySeqListReq proto.InternalMessageInfo

func (m *PullMessageBySeqListReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *PullMessageBySeqListReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *PullMessageBySeqListReq) GetSeqList() []int64 {
	if m != nil {
		return m.SeqList
	}
	return nil
}

type GetMaxAndMinSeqReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID" json:"UserID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=OperationID" json:"OperationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMaxAndMinSeqReq) Reset()         { *m = GetMaxAndMinSeqReq{} }
func (m *GetMaxAndMinSeqReq) String() string { return proto.CompactTextString(m) }
func (*GetMaxAndMinSeqReq) ProtoMessage()    {}
func (*GetMaxAndMinSeqReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{6}
}
func (m *GetMaxAndMinSeqReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMaxAndMinSeqReq.Unmarshal(m, b)
}
func (m *GetMaxAndMinSeqReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMaxAndMinSeqReq.Marshal(b, m, deterministic)
}
func (dst *GetMaxAndMinSeqReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMaxAndMinSeqReq.Merge(dst, src)
}
func (m *GetMaxAndMinSeqReq) XXX_Size() int {
	return xxx_messageInfo_GetMaxAndMinSeqReq.Size(m)
}
func (m *GetMaxAndMinSeqReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMaxAndMinSeqReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetMaxAndMinSeqReq proto.InternalMessageInfo

func (m *GetMaxAndMinSeqReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetMaxAndMinSeqReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetMaxAndMinSeqResp struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=ErrCode" json:"ErrCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=ErrMsg" json:"ErrMsg,omitempty"`
	MaxSeq               int64    `protobuf:"varint,3,opt,name=MaxSeq" json:"MaxSeq,omitempty"`
	MinSeq               int64    `protobuf:"varint,4,opt,name=MinSeq" json:"MinSeq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMaxAndMinSeqResp) Reset()         { *m = GetMaxAndMinSeqResp{} }
func (m *GetMaxAndMinSeqResp) String() string { return proto.CompactTextString(m) }
func (*GetMaxAndMinSeqResp) ProtoMessage()    {}
func (*GetMaxAndMinSeqResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{7}
}
func (m *GetMaxAndMinSeqResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMaxAndMinSeqResp.Unmarshal(m, b)
}
func (m *GetMaxAndMinSeqResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMaxAndMinSeqResp.Marshal(b, m, deterministic)
}
func (dst *GetMaxAndMinSeqResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMaxAndMinSeqResp.Merge(dst, src)
}
func (m *GetMaxAndMinSeqResp) XXX_Size() int {
	return xxx_messageInfo_GetMaxAndMinSeqResp.Size(m)
}
func (m *GetMaxAndMinSeqResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMaxAndMinSeqResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetMaxAndMinSeqResp proto.InternalMessageInfo

func (m *GetMaxAndMinSeqResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetMaxAndMinSeqResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetMaxAndMinSeqResp) GetMaxSeq() int64 {
	if m != nil {
		return m.MaxSeq
	}
	return 0
}

func (m *GetMaxAndMinSeqResp) GetMinSeq() int64 {
	if m != nil {
		return m.MinSeq
	}
	return 0
}

type GatherFormat struct {
	// @inject_tag: json:"id"
	ID string `protobuf:"bytes,1,opt,name=ID" json:"id"`
	// @inject_tag: json:"list"
	List                 []*MsgFormat `protobuf:"bytes,2,rep,name=List" json:"list"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GatherFormat) Reset()         { *m = GatherFormat{} }
func (m *GatherFormat) String() string { return proto.CompactTextString(m) }
func (*GatherFormat) ProtoMessage()    {}
func (*GatherFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{8}
}
func (m *GatherFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatherFormat.Unmarshal(m, b)
}
func (m *GatherFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatherFormat.Marshal(b, m, deterministic)
}
func (dst *GatherFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatherFormat.Merge(dst, src)
}
func (m *GatherFormat) XXX_Size() int {
	return xxx_messageInfo_GatherFormat.Size(m)
}
func (m *GatherFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_GatherFormat.DiscardUnknown(m)
}

var xxx_messageInfo_GatherFormat proto.InternalMessageInfo

func (m *GatherFormat) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GatherFormat) GetList() []*MsgFormat {
	if m != nil {
		return m.List
	}
	return nil
}

type MsgFormat struct {
	// @inject_tag: json:"sendID"
	SendID string `protobuf:"bytes,1,opt,name=SendID" json:"sendID"`
	// @inject_tag: json:"recvID"
	RecvID string `protobuf:"bytes,2,opt,name=RecvID" json:"recvID"`
	// @inject_tag: json:"msgFrom"
	MsgFrom int32 `protobuf:"varint,3,opt,name=MsgFrom" json:"msgFrom"`
	// @inject_tag: json:"contentType"
	ContentType int32 `protobuf:"varint,4,opt,name=ContentType" json:"contentType"`
	// @inject_tag: json:"serverMsgID"
	ServerMsgID string `protobuf:"bytes,5,opt,name=ServerMsgID" json:"serverMsgID"`
	// @inject_tag: json:"content"
	Content string `protobuf:"bytes,6,opt,name=Content" json:"content"`
	// @inject_tag: json:"seq"
	Seq int64 `protobuf:"varint,7,opt,name=Seq" json:"seq"`
	// @inject_tag: json:"sendTime"
	SendTime int64 `protobuf:"varint,8,opt,name=SendTime" json:"sendTime"`
	// @inject_tag: json:"senderPlatformID"
	SenderPlatformID int32 `protobuf:"varint,9,opt,name=SenderPlatformID" json:"senderPlatformID"`
	// @inject_tag: json:"senderNickName"
	SenderNickName string `protobuf:"bytes,10,opt,name=SenderNickName" json:"senderNickName"`
	// @inject_tag: json:"senderFaceUrl"
	SenderFaceURL string `protobuf:"bytes,11,opt,name=SenderFaceURL" json:"senderFaceUrl"`
	// @inject_tag: json:"clientMsgID"
	ClientMsgID          string   `protobuf:"bytes,12,opt,name=ClientMsgID" json:"clientMsgID"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgFormat) Reset()         { *m = MsgFormat{} }
func (m *MsgFormat) String() string { return proto.CompactTextString(m) }
func (*MsgFormat) ProtoMessage()    {}
func (*MsgFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{9}
}
func (m *MsgFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgFormat.Unmarshal(m, b)
}
func (m *MsgFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgFormat.Marshal(b, m, deterministic)
}
func (dst *MsgFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFormat.Merge(dst, src)
}
func (m *MsgFormat) XXX_Size() int {
	return xxx_messageInfo_MsgFormat.Size(m)
}
func (m *MsgFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFormat.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFormat proto.InternalMessageInfo

func (m *MsgFormat) GetSendID() string {
	if m != nil {
		return m.SendID
	}
	return ""
}

func (m *MsgFormat) GetRecvID() string {
	if m != nil {
		return m.RecvID
	}
	return ""
}

func (m *MsgFormat) GetMsgFrom() int32 {
	if m != nil {
		return m.MsgFrom
	}
	return 0
}

func (m *MsgFormat) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *MsgFormat) GetServerMsgID() string {
	if m != nil {
		return m.ServerMsgID
	}
	return ""
}

func (m *MsgFormat) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MsgFormat) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *MsgFormat) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *MsgFormat) GetSenderPlatformID() int32 {
	if m != nil {
		return m.SenderPlatformID
	}
	return 0
}

func (m *MsgFormat) GetSenderNickName() string {
	if m != nil {
		return m.SenderNickName
	}
	return ""
}

func (m *MsgFormat) GetSenderFaceURL() string {
	if m != nil {
		return m.SenderFaceURL
	}
	return ""
}

func (m *MsgFormat) GetClientMsgID() string {
	if m != nil {
		return m.ClientMsgID
	}
	return ""
}

type SendMsgReq struct {
	Token                string          `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	OperationID          string          `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	MsgData              *sdk_ws.MsgData `protobuf:"bytes,3,opt,name=msgData" json:"msgData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SendMsgReq) Reset()         { *m = SendMsgReq{} }
func (m *SendMsgReq) String() string { return proto.CompactTextString(m) }
func (*SendMsgReq) ProtoMessage()    {}
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{10}
}
func (m *SendMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMsgReq.Unmarshal(m, b)
}
func (m *SendMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMsgReq.Marshal(b, m, deterministic)
}
func (dst *SendMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsgReq.Merge(dst, src)
}
func (m *SendMsgReq) XXX_Size() int {
	return xxx_messageInfo_SendMsgReq.Size(m)
}
func (m *SendMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsgReq proto.InternalMessageInfo

func (m *SendMsgReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SendMsgReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *SendMsgReq) GetMsgData() *sdk_ws.MsgData {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type SendMsgResp struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=ErrCode" json:"ErrCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=ErrMsg" json:"ErrMsg,omitempty"`
	ServerMsgID          string   `protobuf:"bytes,4,opt,name=ServerMsgID" json:"ServerMsgID,omitempty"`
	ClientMsgID          string   `protobuf:"bytes,5,opt,name=ClientMsgID" json:"ClientMsgID,omitempty"`
	SendTime             int64    `protobuf:"varint,6,opt,name=sendTime" json:"sendTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMsgResp) Reset()         { *m = SendMsgResp{} }
func (m *SendMsgResp) String() string { return proto.CompactTextString(m) }
func (*SendMsgResp) ProtoMessage()    {}
func (*SendMsgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d22d2bd62db4e275, []int{11}
}
func (m *SendMsgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMsgResp.Unmarshal(m, b)
}
func (m *SendMsgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMsgResp.Marshal(b, m, deterministic)
}
func (dst *SendMsgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsgResp.Merge(dst, src)
}
func (m *SendMsgResp) XXX_Size() int {
	return xxx_messageInfo_SendMsgResp.Size(m)
}
func (m *SendMsgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsgResp.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsgResp proto.InternalMessageInfo

func (m *SendMsgResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *SendMsgResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *SendMsgResp) GetServerMsgID() string {
	if m != nil {
		return m.ServerMsgID
	}
	return ""
}

func (m *SendMsgResp) GetClientMsgID() string {
	if m != nil {
		return m.ClientMsgID
	}
	return ""
}

func (m *SendMsgResp) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgDataToMQ)(nil), "pbChat.MsgDataToMQ")
	proto.RegisterType((*MsgDataToDB)(nil), "pbChat.MsgDataToDB")
	proto.RegisterType((*PushMsgDataToMQ)(nil), "pbChat.PushMsgDataToMQ")
	proto.RegisterType((*PullMessageReq)(nil), "pbChat.PullMessageReq")
	proto.RegisterType((*PullMessageResp)(nil), "pbChat.PullMessageResp")
	proto.RegisterType((*PullMessageBySeqListReq)(nil), "pbChat.PullMessageBySeqListReq")
	proto.RegisterType((*GetMaxAndMinSeqReq)(nil), "pbChat.GetMaxAndMinSeqReq")
	proto.RegisterType((*GetMaxAndMinSeqResp)(nil), "pbChat.GetMaxAndMinSeqResp")
	proto.RegisterType((*GatherFormat)(nil), "pbChat.GatherFormat")
	proto.RegisterType((*MsgFormat)(nil), "pbChat.MsgFormat")
	proto.RegisterType((*SendMsgReq)(nil), "pbChat.SendMsgReq")
	proto.RegisterType((*SendMsgResp)(nil), "pbChat.SendMsgResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Chat service

type ChatClient interface {
	GetMaxAndMinSeq(ctx context.Context, in *GetMaxAndMinSeqReq, opts ...grpc.CallOption) (*GetMaxAndMinSeqResp, error)
	PullMessage(ctx context.Context, in *PullMessageReq, opts ...grpc.CallOption) (*PullMessageResp, error)
	PullMessageBySeqList(ctx context.Context, in *sdk_ws.PullMessageBySeqListReq, opts ...grpc.CallOption) (*sdk_ws.PullMessageBySeqListResp, error)
	SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*SendMsgResp, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) GetMaxAndMinSeq(ctx context.Context, in *GetMaxAndMinSeqReq, opts ...grpc.CallOption) (*GetMaxAndMinSeqResp, error) {
	out := new(GetMaxAndMinSeqResp)
	err := grpc.Invoke(ctx, "/pbChat.Chat/GetMaxAndMinSeq", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) PullMessage(ctx context.Context, in *PullMessageReq, opts ...grpc.CallOption) (*PullMessageResp, error) {
	out := new(PullMessageResp)
	err := grpc.Invoke(ctx, "/pbChat.Chat/PullMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) PullMessageBySeqList(ctx context.Context, in *sdk_ws.PullMessageBySeqListReq, opts ...grpc.CallOption) (*sdk_ws.PullMessageBySeqListResp, error) {
	out := new(sdk_ws.PullMessageBySeqListResp)
	err := grpc.Invoke(ctx, "/pbChat.Chat/PullMessageBySeqList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*SendMsgResp, error) {
	out := new(SendMsgResp)
	err := grpc.Invoke(ctx, "/pbChat.Chat/SendMsg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Chat service

type ChatServer interface {
	GetMaxAndMinSeq(context.Context, *GetMaxAndMinSeqReq) (*GetMaxAndMinSeqResp, error)
	PullMessage(context.Context, *PullMessageReq) (*PullMessageResp, error)
	PullMessageBySeqList(context.Context, *sdk_ws.PullMessageBySeqListReq) (*sdk_ws.PullMessageBySeqListResp, error)
	SendMsg(context.Context, *SendMsgReq) (*SendMsgResp, error)
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_GetMaxAndMinSeq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMaxAndMinSeqReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetMaxAndMinSeq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbChat.Chat/GetMaxAndMinSeq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetMaxAndMinSeq(ctx, req.(*GetMaxAndMinSeqReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_PullMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).PullMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbChat.Chat/PullMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).PullMessage(ctx, req.(*PullMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_PullMessageBySeqList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(sdk_ws.PullMessageBySeqListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).PullMessageBySeqList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbChat.Chat/PullMessageBySeqList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).PullMessageBySeqList(ctx, req.(*sdk_ws.PullMessageBySeqListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_SendMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbChat.Chat/SendMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendMsg(ctx, req.(*SendMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbChat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMaxAndMinSeq",
			Handler:    _Chat_GetMaxAndMinSeq_Handler,
		},
		{
			MethodName: "PullMessage",
			Handler:    _Chat_PullMessage_Handler,
		},
		{
			MethodName: "PullMessageBySeqList",
			Handler:    _Chat_PullMessageBySeqList_Handler,
		},
		{
			MethodName: "SendMsg",
			Handler:    _Chat_SendMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat/chat.proto",
}

func init() { proto.RegisterFile("chat/chat.proto", fileDescriptor_chat_d22d2bd62db4e275) }

var fileDescriptor_chat_d22d2bd62db4e275 = []byte{
	// 754 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcb, 0x4e, 0xdb, 0x40,
	0x14, 0x55, 0xec, 0x3c, 0xe0, 0x06, 0x08, 0x1d, 0x10, 0x58, 0xee, 0x26, 0xb5, 0xa0, 0x42, 0x5d,
	0x24, 0x12, 0xdd, 0x54, 0xad, 0x54, 0xa9, 0x21, 0x01, 0xa5, 0xc2, 0x40, 0x1d, 0xd8, 0x74, 0x13,
	0x99, 0x78, 0xea, 0x58, 0x89, 0x1f, 0x99, 0x99, 0xf0, 0xd8, 0xf4, 0x57, 0xfa, 0x01, 0xfd, 0xb2,
	0x7e, 0x44, 0xa5, 0x6a, 0x66, 0xec, 0x30, 0x89, 0x81, 0xa2, 0x56, 0x62, 0x13, 0xe5, 0x9c, 0xb9,
	0xcf, 0x73, 0xef, 0x8c, 0x0c, 0xb5, 0xc1, 0xd0, 0x65, 0x4d, 0xfe, 0xd3, 0x48, 0x48, 0xcc, 0x62,
	0x54, 0x4e, 0x2e, 0x0f, 0x86, 0x2e, 0x33, 0x5f, 0x9d, 0x26, 0x38, 0xea, 0x77, 0xed, 0x66, 0x32,
	0xf2, 0x9b, 0xe2, 0xa8, 0x49, 0xbd, 0x51, 0xff, 0x9a, 0x36, 0xaf, 0xa9, 0x34, 0xb5, 0xa6, 0x50,
	0xb5, 0xa9, 0xdf, 0x76, 0x99, 0x7b, 0x1e, 0xdb, 0x5f, 0xd0, 0x26, 0x94, 0x58, 0x3c, 0xc2, 0x91,
	0x51, 0xa8, 0x17, 0xf6, 0x96, 0x1d, 0x09, 0x50, 0x1d, 0xaa, 0x71, 0x82, 0x89, 0xcb, 0x82, 0x38,
	0xea, 0xb6, 0x0d, 0x4d, 0x9c, 0xa9, 0x14, 0x6a, 0x40, 0x25, 0x94, 0x61, 0x0c, 0xbd, 0x5e, 0xd8,
	0xab, 0xee, 0x6f, 0x36, 0x62, 0x9e, 0x3b, 0x08, 0xfb, 0xd4, 0x1b, 0x35, 0xd2, 0x14, 0x4e, 0x66,
	0x64, 0xf5, 0x95, 0xb4, 0xed, 0x96, 0xea, 0x5e, 0x78, 0x82, 0xfb, 0xdf, 0x0b, 0xb2, 0x06, 0x50,
	0x3b, 0x9b, 0xd2, 0xa1, 0xda, 0x5b, 0x1d, 0xaa, 0xa7, 0x8a, 0x93, 0xec, 0x50, 0xa5, 0xd4, 0x32,
	0xb4, 0xa7, 0x74, 0xf1, 0x1d, 0xd6, 0xce, 0xa6, 0xe3, 0xb1, 0x8d, 0x29, 0x75, 0x7d, 0xec, 0xe0,
	0x09, 0xda, 0x82, 0xf2, 0x05, 0xc5, 0x64, 0x16, 0x3e, 0x45, 0xc8, 0x84, 0xa5, 0x1e, 0x9e, 0xb4,
	0xb0, 0x1f, 0x44, 0x22, 0xb4, 0xee, 0xcc, 0x30, 0xf7, 0xe9, 0xe1, 0x49, 0x27, 0xf2, 0x84, 0x74,
	0xba, 0x93, 0xa2, 0xc5, 0x7a, 0x8b, 0xb9, 0x7a, 0xad, 0x5f, 0x05, 0xde, 0xa5, 0x52, 0x00, 0x4d,
	0x90, 0x01, 0x95, 0x0e, 0x21, 0x07, 0xb1, 0x87, 0x45, 0x09, 0x25, 0x27, 0x83, 0x3c, 0x4f, 0x87,
	0x10, 0x9b, 0xfa, 0xa9, 0x5e, 0x29, 0xe2, 0xbc, 0xed, 0xde, 0xf4, 0xf0, 0x24, 0xcb, 0x2f, 0x91,
	0xe0, 0x83, 0x88, 0xf3, 0xc5, 0x94, 0x17, 0x08, 0xbd, 0x87, 0xd5, 0x5e, 0x10, 0xf9, 0x63, 0xcc,
	0x7b, 0xe3, 0xe1, 0x4a, 0x75, 0x5d, 0x68, 0x25, 0xb7, 0xae, 0x71, 0xe4, 0xb2, 0x21, 0x26, 0x87,
	0x31, 0x09, 0x5d, 0xe6, 0xcc, 0x9b, 0xa2, 0x77, 0xb0, 0x72, 0x44, 0xe2, 0x69, 0x92, 0xb9, 0x96,
	0x1f, 0x71, 0x9d, 0xb3, 0xb4, 0x42, 0xd8, 0x56, 0x5a, 0x6d, 0xdd, 0xf6, 0xf0, 0xe4, 0x38, 0xa0,
	0xec, 0x31, 0xd1, 0x17, 0x04, 0xd4, 0xf2, 0x03, 0x37, 0xa0, 0x42, 0x65, 0x1c, 0x43, 0xaf, 0xeb,
	0x7b, 0xba, 0x93, 0x41, 0xeb, 0x04, 0xd0, 0x11, 0x66, 0xb6, 0x7b, 0xf3, 0x29, 0xf2, 0x64, 0xdf,
	0xff, 0x95, 0xc9, 0xba, 0x86, 0x8d, 0x5c, 0xbc, 0xe7, 0x98, 0x96, 0xd5, 0x81, 0x15, 0x55, 0x55,
	0xb4, 0x06, 0xda, 0xac, 0x7c, 0xad, 0xdb, 0x46, 0xbb, 0x50, 0x14, 0xfd, 0x6b, 0x62, 0x12, 0x2f,
	0xb2, 0x49, 0xd8, 0xd4, 0x4f, 0xc7, 0x20, 0x8e, 0xad, 0xdf, 0x1a, 0x2c, 0xcf, 0x38, 0xb9, 0xb2,
	0x91, 0x77, 0xa7, 0x83, 0x44, 0x9c, 0x77, 0xf0, 0xe0, 0x6a, 0x26, 0x41, 0x8a, 0x78, 0x9b, 0xdc,
	0x99, 0xc4, 0xa1, 0xa8, 0xba, 0xe4, 0x64, 0x90, 0x2b, 0x77, 0x10, 0x47, 0x0c, 0x47, 0xec, 0xfc,
	0x36, 0xc1, 0xa2, 0xf6, 0x92, 0xa3, 0x52, 0xdc, 0xa2, 0x87, 0xc9, 0x95, 0xd8, 0x82, 0x6e, 0xdb,
	0x28, 0x49, 0x6d, 0x15, 0x8a, 0x47, 0x4f, 0x1d, 0x8c, 0xb2, 0x38, 0xcd, 0x20, 0x5a, 0x07, 0x9d,
	0x2b, 0x52, 0x11, 0x8a, 0xf0, 0xbf, 0xf2, 0x22, 0x46, 0xde, 0x79, 0x10, 0x62, 0x63, 0x29, 0xbb,
	0x88, 0x12, 0xa3, 0x37, 0xb0, 0xce, 0xff, 0x63, 0x72, 0x36, 0x76, 0xd9, 0xb7, 0x98, 0x84, 0xdd,
	0xb6, 0xb1, 0x2c, 0x0a, 0xca, 0xf1, 0xe8, 0x35, 0xac, 0x49, 0xee, 0x24, 0x18, 0x8c, 0x4e, 0xdc,
	0x10, 0x1b, 0x20, 0x52, 0x2f, 0xb0, 0x68, 0x07, 0x56, 0x25, 0x73, 0xe8, 0x0e, 0xf0, 0x85, 0x73,
	0x6c, 0x54, 0x85, 0xd9, 0x3c, 0x29, 0x54, 0x18, 0x07, 0x38, 0x62, 0xb2, 0xc7, 0x15, 0xd9, 0xa3,
	0x42, 0x59, 0x0c, 0x80, 0xbb, 0xd8, 0xd4, 0xe7, 0x7b, 0xf8, 0x5c, 0xcf, 0xf4, 0x8f, 0x02, 0x17,
	0x3f, 0x4d, 0xfb, 0x4f, 0xeb, 0xba, 0x30, 0xbd, 0x62, 0x7e, 0x7a, 0x0b, 0xbd, 0x97, 0x72, 0xbd,
	0xf3, 0x99, 0xd1, 0x6c, 0x66, 0x65, 0x39, 0xb3, 0x0c, 0xef, 0xff, 0xd4, 0xa0, 0xc8, 0x17, 0x16,
	0x7d, 0x86, 0xda, 0xc2, 0x05, 0x43, 0xe6, 0xec, 0x59, 0xc9, 0xdd, 0x64, 0xf3, 0xe5, 0x83, 0x67,
	0x34, 0x41, 0x1f, 0xa1, 0xaa, 0xbc, 0x35, 0x68, 0x2b, 0xb3, 0x9d, 0x7f, 0xec, 0xcd, 0xed, 0x7b,
	0x79, 0x9a, 0xa0, 0x01, 0x6c, 0xde, 0xf7, 0x56, 0xa1, 0x9d, 0x39, 0xb5, 0x1f, 0x78, 0xce, 0xcc,
	0xdd, 0x27, 0x58, 0xd1, 0x04, 0xed, 0x43, 0x25, 0x1d, 0x0d, 0x42, 0x59, 0x21, 0x77, 0x2b, 0x62,
	0x6e, 0xe4, 0x38, 0x9a, 0xb4, 0x6a, 0x5f, 0x57, 0x1b, 0xe2, 0x43, 0xe1, 0x83, 0x3c, 0xbc, 0x2c,
	0x8b, 0xaf, 0x80, 0xb7, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x2c, 0x3b, 0x8f, 0x43, 0x08,
	0x00, 0x00,
}
