// Code generated by protoc-gen-go. DO NOT EDIT.
// source: group/group.proto

package group

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommonResp struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonResp) Reset()         { *m = CommonResp{} }
func (m *CommonResp) String() string { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()    {}
func (*CommonResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{0}
}

func (m *CommonResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResp.Unmarshal(m, b)
}
func (m *CommonResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResp.Marshal(b, m, deterministic)
}
func (m *CommonResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResp.Merge(m, src)
}
func (m *CommonResp) XXX_Size() int {
	return xxx_messageInfo_CommonResp.Size(m)
}
func (m *CommonResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResp proto.InternalMessageInfo

func (m *CommonResp) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *CommonResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

type CreateGroupReq struct {
	UserIDList           []string `protobuf:"bytes,1,rep,name=userIDList,proto3" json:"userIDList,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGroupReq) Reset()         { *m = CreateGroupReq{} }
func (m *CreateGroupReq) String() string { return proto.CompactTextString(m) }
func (*CreateGroupReq) ProtoMessage()    {}
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{1}
}

func (m *CreateGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGroupReq.Unmarshal(m, b)
}
func (m *CreateGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGroupReq.Marshal(b, m, deterministic)
}
func (m *CreateGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGroupReq.Merge(m, src)
}
func (m *CreateGroupReq) XXX_Size() int {
	return xxx_messageInfo_CreateGroupReq.Size(m)
}
func (m *CreateGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGroupReq proto.InternalMessageInfo

func (m *CreateGroupReq) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

func (m *CreateGroupReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CreateGroupReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type CreateGroupResp struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	GroupID              string   `protobuf:"bytes,3,opt,name=groupID,proto3" json:"groupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGroupResp) Reset()         { *m = CreateGroupResp{} }
func (m *CreateGroupResp) String() string { return proto.CompactTextString(m) }
func (*CreateGroupResp) ProtoMessage()    {}
func (*CreateGroupResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{2}
}

func (m *CreateGroupResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGroupResp.Unmarshal(m, b)
}
func (m *CreateGroupResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGroupResp.Marshal(b, m, deterministic)
}
func (m *CreateGroupResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGroupResp.Merge(m, src)
}
func (m *CreateGroupResp) XXX_Size() int {
	return xxx_messageInfo_CreateGroupResp.Size(m)
}
func (m *CreateGroupResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGroupResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGroupResp proto.InternalMessageInfo

func (m *CreateGroupResp) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *CreateGroupResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *CreateGroupResp) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type GetGroupListReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupListReq) Reset()         { *m = GetGroupListReq{} }
func (m *GetGroupListReq) String() string { return proto.CompactTextString(m) }
func (*GetGroupListReq) ProtoMessage()    {}
func (*GetGroupListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{3}
}

func (m *GetGroupListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupListReq.Unmarshal(m, b)
}
func (m *GetGroupListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupListReq.Marshal(b, m, deterministic)
}
func (m *GetGroupListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupListReq.Merge(m, src)
}
func (m *GetGroupListReq) XXX_Size() int {
	return xxx_messageInfo_GetGroupListReq.Size(m)
}
func (m *GetGroupListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupListReq proto.InternalMessageInfo

func (m *GetGroupListReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetGroupListReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetGroupListResp struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	GroupList            []string `protobuf:"bytes,3,rep,name=groupList,proto3" json:"groupList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupListResp) Reset()         { *m = GetGroupListResp{} }
func (m *GetGroupListResp) String() string { return proto.CompactTextString(m) }
func (*GetGroupListResp) ProtoMessage()    {}
func (*GetGroupListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{4}
}

func (m *GetGroupListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupListResp.Unmarshal(m, b)
}
func (m *GetGroupListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupListResp.Marshal(b, m, deterministic)
}
func (m *GetGroupListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupListResp.Merge(m, src)
}
func (m *GetGroupListResp) XXX_Size() int {
	return xxx_messageInfo_GetGroupListResp.Size(m)
}
func (m *GetGroupListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupListResp proto.InternalMessageInfo

func (m *GetGroupListResp) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *GetGroupListResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *GetGroupListResp) GetGroupList() []string {
	if m != nil {
		return m.GroupList
	}
	return nil
}

type GetGroupInfoReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupInfoReq) Reset()         { *m = GetGroupInfoReq{} }
func (m *GetGroupInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetGroupInfoReq) ProtoMessage()    {}
func (*GetGroupInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{5}
}

func (m *GetGroupInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupInfoReq.Unmarshal(m, b)
}
func (m *GetGroupInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupInfoReq.Marshal(b, m, deterministic)
}
func (m *GetGroupInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupInfoReq.Merge(m, src)
}
func (m *GetGroupInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetGroupInfoReq.Size(m)
}
func (m *GetGroupInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupInfoReq proto.InternalMessageInfo

func (m *GetGroupInfoReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *GetGroupInfoReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *GetGroupInfoReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetGroupInfoResp struct {
	ErrorCode            int32         `protobuf:"varint,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string        `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	GroupID              string        `protobuf:"bytes,3,opt,name=groupID,proto3" json:"groupID,omitempty"`
	GroupName            string        `protobuf:"bytes,4,opt,name=groupName,proto3" json:"groupName,omitempty"`
	GroupHeadURL         string        `protobuf:"bytes,5,opt,name=groupHeadURL,proto3" json:"groupHeadURL,omitempty"`
	Bulletin             string        `protobuf:"bytes,6,opt,name=bulletin,proto3" json:"bulletin,omitempty"`
	GroupMemberList      []*MemberList `protobuf:"bytes,7,rep,name=groupMemberList,proto3" json:"groupMemberList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetGroupInfoResp) Reset()         { *m = GetGroupInfoResp{} }
func (m *GetGroupInfoResp) String() string { return proto.CompactTextString(m) }
func (*GetGroupInfoResp) ProtoMessage()    {}
func (*GetGroupInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{6}
}

func (m *GetGroupInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupInfoResp.Unmarshal(m, b)
}
func (m *GetGroupInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupInfoResp.Marshal(b, m, deterministic)
}
func (m *GetGroupInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupInfoResp.Merge(m, src)
}
func (m *GetGroupInfoResp) XXX_Size() int {
	return xxx_messageInfo_GetGroupInfoResp.Size(m)
}
func (m *GetGroupInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupInfoResp proto.InternalMessageInfo

func (m *GetGroupInfoResp) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *GetGroupInfoResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *GetGroupInfoResp) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *GetGroupInfoResp) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GetGroupInfoResp) GetGroupHeadURL() string {
	if m != nil {
		return m.GroupHeadURL
	}
	return ""
}

func (m *GetGroupInfoResp) GetBulletin() string {
	if m != nil {
		return m.Bulletin
	}
	return ""
}

func (m *GetGroupInfoResp) GetGroupMemberList() []*MemberList {
	if m != nil {
		return m.GroupMemberList
	}
	return nil
}

type MemberList struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	IsAdmin              int32    `protobuf:"varint,3,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberList) Reset()         { *m = MemberList{} }
func (m *MemberList) String() string { return proto.CompactTextString(m) }
func (*MemberList) ProtoMessage()    {}
func (*MemberList) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{7}
}

func (m *MemberList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberList.Unmarshal(m, b)
}
func (m *MemberList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberList.Marshal(b, m, deterministic)
}
func (m *MemberList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberList.Merge(m, src)
}
func (m *MemberList) XXX_Size() int {
	return xxx_messageInfo_MemberList.Size(m)
}
func (m *MemberList) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberList.DiscardUnknown(m)
}

var xxx_messageInfo_MemberList proto.InternalMessageInfo

func (m *MemberList) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *MemberList) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *MemberList) GetIsAdmin() int32 {
	if m != nil {
		return m.IsAdmin
	}
	return 0
}

type DeleteGroupMemberReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserIdList           []string `protobuf:"bytes,4,rep,name=userIdList,proto3" json:"userIdList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGroupMemberReq) Reset()         { *m = DeleteGroupMemberReq{} }
func (m *DeleteGroupMemberReq) String() string { return proto.CompactTextString(m) }
func (*DeleteGroupMemberReq) ProtoMessage()    {}
func (*DeleteGroupMemberReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{8}
}

func (m *DeleteGroupMemberReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGroupMemberReq.Unmarshal(m, b)
}
func (m *DeleteGroupMemberReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGroupMemberReq.Marshal(b, m, deterministic)
}
func (m *DeleteGroupMemberReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGroupMemberReq.Merge(m, src)
}
func (m *DeleteGroupMemberReq) XXX_Size() int {
	return xxx_messageInfo_DeleteGroupMemberReq.Size(m)
}
func (m *DeleteGroupMemberReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGroupMemberReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGroupMemberReq proto.InternalMessageInfo

func (m *DeleteGroupMemberReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *DeleteGroupMemberReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *DeleteGroupMemberReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *DeleteGroupMemberReq) GetUserIdList() []string {
	if m != nil {
		return m.UserIdList
	}
	return nil
}

type SetGroupNameReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	OperationID          string   `protobuf:"bytes,4,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGroupNameReq) Reset()         { *m = SetGroupNameReq{} }
func (m *SetGroupNameReq) String() string { return proto.CompactTextString(m) }
func (*SetGroupNameReq) ProtoMessage()    {}
func (*SetGroupNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{9}
}

func (m *SetGroupNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGroupNameReq.Unmarshal(m, b)
}
func (m *SetGroupNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGroupNameReq.Marshal(b, m, deterministic)
}
func (m *SetGroupNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGroupNameReq.Merge(m, src)
}
func (m *SetGroupNameReq) XXX_Size() int {
	return xxx_messageInfo_SetGroupNameReq.Size(m)
}
func (m *SetGroupNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGroupNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetGroupNameReq proto.InternalMessageInfo

func (m *SetGroupNameReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *SetGroupNameReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetGroupNameReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SetGroupNameReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type SetGroupBulletinReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Bulletin             string   `protobuf:"bytes,2,opt,name=bulletin,proto3" json:"bulletin,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGroupBulletinReq) Reset()         { *m = SetGroupBulletinReq{} }
func (m *SetGroupBulletinReq) String() string { return proto.CompactTextString(m) }
func (*SetGroupBulletinReq) ProtoMessage()    {}
func (*SetGroupBulletinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{10}
}

func (m *SetGroupBulletinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGroupBulletinReq.Unmarshal(m, b)
}
func (m *SetGroupBulletinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGroupBulletinReq.Marshal(b, m, deterministic)
}
func (m *SetGroupBulletinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGroupBulletinReq.Merge(m, src)
}
func (m *SetGroupBulletinReq) XXX_Size() int {
	return xxx_messageInfo_SetGroupBulletinReq.Size(m)
}
func (m *SetGroupBulletinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGroupBulletinReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetGroupBulletinReq proto.InternalMessageInfo

func (m *SetGroupBulletinReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *SetGroupBulletinReq) GetBulletin() string {
	if m != nil {
		return m.Bulletin
	}
	return ""
}

func (m *SetGroupBulletinReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *SetGroupBulletinReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type SetOwnerGroupNickNameReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetOwnerGroupNickNameReq) Reset()         { *m = SetOwnerGroupNickNameReq{} }
func (m *SetOwnerGroupNickNameReq) String() string { return proto.CompactTextString(m) }
func (*SetOwnerGroupNickNameReq) ProtoMessage()    {}
func (*SetOwnerGroupNickNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{11}
}

func (m *SetOwnerGroupNickNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetOwnerGroupNickNameReq.Unmarshal(m, b)
}
func (m *SetOwnerGroupNickNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetOwnerGroupNickNameReq.Marshal(b, m, deterministic)
}
func (m *SetOwnerGroupNickNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetOwnerGroupNickNameReq.Merge(m, src)
}
func (m *SetOwnerGroupNickNameReq) XXX_Size() int {
	return xxx_messageInfo_SetOwnerGroupNickNameReq.Size(m)
}
func (m *SetOwnerGroupNickNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetOwnerGroupNickNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetOwnerGroupNickNameReq proto.InternalMessageInfo

func (m *SetOwnerGroupNickNameReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *SetOwnerGroupNickNameReq) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *SetOwnerGroupNickNameReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *SetOwnerGroupNickNameReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type SetGroupHeadImageReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	HeadUrl              string   `protobuf:"bytes,2,opt,name=headUrl,proto3" json:"headUrl,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGroupHeadImageReq) Reset()         { *m = SetGroupHeadImageReq{} }
func (m *SetGroupHeadImageReq) String() string { return proto.CompactTextString(m) }
func (*SetGroupHeadImageReq) ProtoMessage()    {}
func (*SetGroupHeadImageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{12}
}

func (m *SetGroupHeadImageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGroupHeadImageReq.Unmarshal(m, b)
}
func (m *SetGroupHeadImageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGroupHeadImageReq.Marshal(b, m, deterministic)
}
func (m *SetGroupHeadImageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGroupHeadImageReq.Merge(m, src)
}
func (m *SetGroupHeadImageReq) XXX_Size() int {
	return xxx_messageInfo_SetGroupHeadImageReq.Size(m)
}
func (m *SetGroupHeadImageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGroupHeadImageReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetGroupHeadImageReq proto.InternalMessageInfo

func (m *SetGroupHeadImageReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *SetGroupHeadImageReq) GetHeadUrl() string {
	if m != nil {
		return m.HeadUrl
	}
	return ""
}

func (m *SetGroupHeadImageReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *SetGroupHeadImageReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type MemberExitGroupReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberExitGroupReq) Reset()         { *m = MemberExitGroupReq{} }
func (m *MemberExitGroupReq) String() string { return proto.CompactTextString(m) }
func (*MemberExitGroupReq) ProtoMessage()    {}
func (*MemberExitGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2b031859d3bcfd, []int{13}
}

func (m *MemberExitGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberExitGroupReq.Unmarshal(m, b)
}
func (m *MemberExitGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberExitGroupReq.Marshal(b, m, deterministic)
}
func (m *MemberExitGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberExitGroupReq.Merge(m, src)
}
func (m *MemberExitGroupReq) XXX_Size() int {
	return xxx_messageInfo_MemberExitGroupReq.Size(m)
}
func (m *MemberExitGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberExitGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_MemberExitGroupReq proto.InternalMessageInfo

func (m *MemberExitGroupReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *MemberExitGroupReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *MemberExitGroupReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*CommonResp)(nil), "group.CommonResp")
	proto.RegisterType((*CreateGroupReq)(nil), "group.CreateGroupReq")
	proto.RegisterType((*CreateGroupResp)(nil), "group.CreateGroupResp")
	proto.RegisterType((*GetGroupListReq)(nil), "group.GetGroupListReq")
	proto.RegisterType((*GetGroupListResp)(nil), "group.GetGroupListResp")
	proto.RegisterType((*GetGroupInfoReq)(nil), "group.GetGroupInfoReq")
	proto.RegisterType((*GetGroupInfoResp)(nil), "group.GetGroupInfoResp")
	proto.RegisterType((*MemberList)(nil), "group.MemberList")
	proto.RegisterType((*DeleteGroupMemberReq)(nil), "group.DeleteGroupMemberReq")
	proto.RegisterType((*SetGroupNameReq)(nil), "group.SetGroupNameReq")
	proto.RegisterType((*SetGroupBulletinReq)(nil), "group.SetGroupBulletinReq")
	proto.RegisterType((*SetOwnerGroupNickNameReq)(nil), "group.SetOwnerGroupNickNameReq")
	proto.RegisterType((*SetGroupHeadImageReq)(nil), "group.SetGroupHeadImageReq")
	proto.RegisterType((*MemberExitGroupReq)(nil), "group.MemberExitGroupReq")
}

func init() { proto.RegisterFile("group/group.proto", fileDescriptor_6e2b031859d3bcfd) }

var fileDescriptor_6e2b031859d3bcfd = []byte{
	// 664 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0x56, 0xda, 0xb4, 0xa5, 0xaf, 0x85, 0xae, 0xa6, 0x1b, 0xa6, 0x4c, 0x50, 0xe5, 0xd4, 0xd3,
	0x90, 0xc6, 0x09, 0x0d, 0x69, 0xda, 0xda, 0x31, 0x2a, 0x36, 0x26, 0x65, 0xe2, 0xb2, 0x5b, 0x7f,
	0x78, 0x5d, 0x58, 0x93, 0x14, 0x27, 0xd5, 0xb8, 0x02, 0x97, 0xfd, 0x93, 0xfc, 0x2f, 0xc8, 0x8e,
	0x63, 0x3b, 0xa9, 0x69, 0xa5, 0x8e, 0x5d, 0xa2, 0xbe, 0x17, 0xe7, 0x7b, 0xdf, 0xfb, 0xf1, 0x3d,
	0x17, 0x9a, 0x53, 0x1a, 0x2e, 0xe6, 0x6f, 0xf9, 0x73, 0x6f, 0x4e, 0xc3, 0x38, 0x44, 0x25, 0x6e,
	0x38, 0x1f, 0x01, 0x7a, 0xa1, 0xef, 0x87, 0x81, 0x4b, 0xa2, 0x39, 0xda, 0x85, 0xea, 0x09, 0xa5,
	0x21, 0xed, 0x85, 0x13, 0x82, 0xad, 0x8e, 0xd5, 0x2d, 0xb9, 0xca, 0x81, 0xda, 0xf0, 0x84, 0x1b,
	0xe7, 0xd1, 0x14, 0x17, 0x3a, 0x56, 0xb7, 0xea, 0x4a, 0xdb, 0xb9, 0x81, 0x67, 0x3d, 0x4a, 0x86,
	0x31, 0x39, 0x65, 0xb0, 0x2e, 0xf9, 0x8e, 0x5e, 0x03, 0x2c, 0x22, 0x42, 0x07, 0xfd, 0x33, 0x2f,
	0x8a, 0xb1, 0xd5, 0x29, 0x76, 0xab, 0xae, 0xe6, 0x41, 0x2d, 0x28, 0xc5, 0xe1, 0x2d, 0x09, 0x04,
	0x54, 0x62, 0xa0, 0x0e, 0xd4, 0x2e, 0xe6, 0x84, 0x0e, 0x63, 0x2f, 0x0c, 0x06, 0x7d, 0x5c, 0xe4,
	0xef, 0x74, 0x97, 0x43, 0xa0, 0x91, 0x89, 0xf4, 0x10, 0xda, 0x08, 0x43, 0x85, 0xd7, 0x41, 0x86,
	0x4a, 0x4d, 0x67, 0x00, 0x8d, 0x53, 0x12, 0xf3, 0x18, 0x8c, 0x2e, 0xcb, 0x48, 0x32, 0xb6, 0x56,
	0x30, 0x2e, 0x2c, 0x33, 0xfe, 0x06, 0x5b, 0x59, 0xa8, 0x07, 0x51, 0xde, 0x85, 0xea, 0x34, 0x85,
	0xc2, 0x45, 0x5e, 0x56, 0xe5, 0x70, 0xc6, 0x8a, 0xf6, 0x20, 0xb8, 0x0e, 0x19, 0x6d, 0x2d, 0x47,
	0x2b, 0x93, 0xe3, 0x7a, 0xea, 0x2a, 0xe5, 0xa2, 0x96, 0xb2, 0xf3, 0xb3, 0xa0, 0x32, 0x4a, 0xa2,
	0x3c, 0x4e, 0x13, 0x64, 0xae, 0x5f, 0x86, 0x3e, 0xc1, 0x36, 0x7f, 0xa7, 0x1c, 0xc8, 0x81, 0x3a,
	0x37, 0x3e, 0x91, 0xe1, 0xe4, 0xab, 0x7b, 0x86, 0x4b, 0xfc, 0x40, 0xc6, 0xc7, 0xe2, 0x8e, 0x16,
	0xb3, 0x19, 0x89, 0xbd, 0x00, 0x97, 0x93, 0xb8, 0xa9, 0x8d, 0x0e, 0xa0, 0xc1, 0xcf, 0x9e, 0x13,
	0x7f, 0x44, 0x28, 0xaf, 0x67, 0xa5, 0x53, 0xec, 0xd6, 0xf6, 0x9b, 0x7b, 0x89, 0x52, 0xd4, 0x0b,
	0x37, 0x7f, 0xd2, 0xb9, 0x02, 0x50, 0x16, 0xda, 0x81, 0x72, 0x32, 0xda, 0xa2, 0xc4, 0xc2, 0x62,
	0xe1, 0x03, 0x6f, 0x7c, 0xcb, 0xf9, 0x8b, 0xb4, 0x53, 0x9b, 0xa5, 0xed, 0x45, 0x47, 0x13, 0xdf,
	0x4b, 0xaa, 0x5b, 0x72, 0x53, 0xd3, 0xb9, 0xb7, 0xa0, 0xd5, 0x27, 0x33, 0x22, 0x66, 0x3c, 0x89,
	0xb3, 0xba, 0x95, 0x1b, 0xaa, 0x49, 0xaa, 0x74, 0xc2, 0xd3, 0xb7, 0x35, 0x95, 0x72, 0x8f, 0x73,
	0x07, 0x8d, 0x4b, 0xd1, 0x69, 0x46, 0x7a, 0x35, 0x09, 0x04, 0x76, 0xa0, 0x32, 0xe5, 0xbf, 0xcd,
	0x13, 0x94, 0x27, 0x66, 0x2f, 0x8b, 0xe6, 0xb7, 0x05, 0xcf, 0xd3, 0xc8, 0xc7, 0xa2, 0x63, 0xab,
	0xa3, 0xeb, 0xad, 0x2e, 0xe4, 0x5a, 0xbd, 0xbe, 0x10, 0x92, 0xa7, 0xad, 0x4f, 0xfa, 0xbd, 0x05,
	0xf8, 0x92, 0xc4, 0x17, 0x77, 0x01, 0xa1, 0x49, 0x11, 0x44, 0xf7, 0xd6, 0x52, 0xf9, 0x67, 0xdb,
	0x37, 0xa5, 0xf2, 0xcb, 0x82, 0x56, 0x5a, 0x10, 0x36, 0xdd, 0x03, 0x7f, 0x38, 0x5d, 0x43, 0x03,
	0x43, 0xe5, 0x86, 0xe9, 0x80, 0xce, 0x04, 0x8b, 0xd4, 0xdc, 0x98, 0xc4, 0x35, 0xa0, 0x64, 0x1a,
	0x4f, 0x7e, 0x78, 0xb1, 0x5c, 0xf5, 0xff, 0x7d, 0xc3, 0xec, 0xff, 0xb1, 0x21, 0xb9, 0xa0, 0xd0,
	0x07, 0xa8, 0x8d, 0xd5, 0xba, 0x47, 0xdb, 0x42, 0x9a, 0xd9, 0xcb, 0xa6, 0xbd, 0x63, 0x72, 0x47,
	0x73, 0x74, 0x08, 0xf5, 0xa9, 0xb6, 0x7a, 0x51, 0x7a, 0x2e, 0xb7, 0xda, 0xdb, 0x2f, 0x8c, 0xfe,
	0x2c, 0x00, 0xdb, 0x74, 0x4b, 0x00, 0x62, 0xc9, 0x2e, 0x01, 0xc8, 0xb5, 0xd8, 0x83, 0xe6, 0x24,
	0x2f, 0x65, 0xf4, 0x4a, 0x9c, 0x36, 0x89, 0xbc, 0x9d, 0x6e, 0x1f, 0xed, 0x5e, 0x7e, 0x0f, 0xf5,
	0x48, 0x53, 0xa1, 0x64, 0x91, 0x93, 0xa6, 0xe9, 0xd3, 0x23, 0xd8, 0x8a, 0x72, 0x32, 0x42, 0xed,
	0xdc, 0xe7, 0x9a, 0xbe, 0x4c, 0x10, 0x9f, 0x61, 0x3b, 0x32, 0x69, 0x00, 0xbd, 0x51, 0x38, 0x46,
	0x85, 0x98, 0xc0, 0x7a, 0xd0, 0x8c, 0xf2, 0x53, 0x2c, 0xeb, 0x61, 0x9a, 0x6f, 0x13, 0xc8, 0x21,
	0x34, 0xfc, 0xec, 0x18, 0xa2, 0x97, 0x99, 0x9d, 0xad, 0x8f, 0xa7, 0x01, 0xe0, 0xf8, 0xe9, 0x55,
	0x8d, 0xfb, 0x0e, 0xf8, 0x73, 0x54, 0xe6, 0xff, 0x89, 0xde, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0xa7, 0xec, 0x78, 0x9d, 0x28, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GroupClient is the client API for Group service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupClient interface {
	CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error)
	GetGroupList(ctx context.Context, in *GetGroupListReq, opts ...grpc.CallOption) (*GetGroupListResp, error)
	GetGroupInfo(ctx context.Context, in *GetGroupInfoReq, opts ...grpc.CallOption) (*GetGroupInfoResp, error)
	DeleteGroupMember(ctx context.Context, in *DeleteGroupMemberReq, opts ...grpc.CallOption) (*CommonResp, error)
	SetGroupName(ctx context.Context, in *SetGroupNameReq, opts ...grpc.CallOption) (*CommonResp, error)
	SetGroupBulletin(ctx context.Context, in *SetGroupBulletinReq, opts ...grpc.CallOption) (*CommonResp, error)
	SetOwnerGroupNickName(ctx context.Context, in *SetOwnerGroupNickNameReq, opts ...grpc.CallOption) (*CommonResp, error)
	SetGroupHeadImage(ctx context.Context, in *SetGroupHeadImageReq, opts ...grpc.CallOption) (*CommonResp, error)
	MemberExitGroup(ctx context.Context, in *MemberExitGroupReq, opts ...grpc.CallOption) (*CommonResp, error)
}

type groupClient struct {
	cc *grpc.ClientConn
}

func NewGroupClient(cc *grpc.ClientConn) GroupClient {
	return &groupClient{cc}
}

func (c *groupClient) CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error) {
	out := new(CreateGroupResp)
	err := c.cc.Invoke(ctx, "/group.group/createGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) GetGroupList(ctx context.Context, in *GetGroupListReq, opts ...grpc.CallOption) (*GetGroupListResp, error) {
	out := new(GetGroupListResp)
	err := c.cc.Invoke(ctx, "/group.group/getGroupList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) GetGroupInfo(ctx context.Context, in *GetGroupInfoReq, opts ...grpc.CallOption) (*GetGroupInfoResp, error) {
	out := new(GetGroupInfoResp)
	err := c.cc.Invoke(ctx, "/group.group/getGroupInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) DeleteGroupMember(ctx context.Context, in *DeleteGroupMemberReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/group.group/deleteGroupMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) SetGroupName(ctx context.Context, in *SetGroupNameReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/group.group/setGroupName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) SetGroupBulletin(ctx context.Context, in *SetGroupBulletinReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/group.group/setGroupBulletin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) SetOwnerGroupNickName(ctx context.Context, in *SetOwnerGroupNickNameReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/group.group/setOwnerGroupNickName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) SetGroupHeadImage(ctx context.Context, in *SetGroupHeadImageReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/group.group/setGroupHeadImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) MemberExitGroup(ctx context.Context, in *MemberExitGroupReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/group.group/memberExitGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupServer is the server API for Group service.
type GroupServer interface {
	CreateGroup(context.Context, *CreateGroupReq) (*CreateGroupResp, error)
	GetGroupList(context.Context, *GetGroupListReq) (*GetGroupListResp, error)
	GetGroupInfo(context.Context, *GetGroupInfoReq) (*GetGroupInfoResp, error)
	DeleteGroupMember(context.Context, *DeleteGroupMemberReq) (*CommonResp, error)
	SetGroupName(context.Context, *SetGroupNameReq) (*CommonResp, error)
	SetGroupBulletin(context.Context, *SetGroupBulletinReq) (*CommonResp, error)
	SetOwnerGroupNickName(context.Context, *SetOwnerGroupNickNameReq) (*CommonResp, error)
	SetGroupHeadImage(context.Context, *SetGroupHeadImageReq) (*CommonResp, error)
	MemberExitGroup(context.Context, *MemberExitGroupReq) (*CommonResp, error)
}

// UnimplementedGroupServer can be embedded to have forward compatible implementations.
type UnimplementedGroupServer struct {
}

func (*UnimplementedGroupServer) CreateGroup(ctx context.Context, req *CreateGroupReq) (*CreateGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroup not implemented")
}
func (*UnimplementedGroupServer) GetGroupList(ctx context.Context, req *GetGroupListReq) (*GetGroupListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupList not implemented")
}
func (*UnimplementedGroupServer) GetGroupInfo(ctx context.Context, req *GetGroupInfoReq) (*GetGroupInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupInfo not implemented")
}
func (*UnimplementedGroupServer) DeleteGroupMember(ctx context.Context, req *DeleteGroupMemberReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGroupMember not implemented")
}
func (*UnimplementedGroupServer) SetGroupName(ctx context.Context, req *SetGroupNameReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupName not implemented")
}
func (*UnimplementedGroupServer) SetGroupBulletin(ctx context.Context, req *SetGroupBulletinReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupBulletin not implemented")
}
func (*UnimplementedGroupServer) SetOwnerGroupNickName(ctx context.Context, req *SetOwnerGroupNickNameReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOwnerGroupNickName not implemented")
}
func (*UnimplementedGroupServer) SetGroupHeadImage(ctx context.Context, req *SetGroupHeadImageReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupHeadImage not implemented")
}
func (*UnimplementedGroupServer) MemberExitGroup(ctx context.Context, req *MemberExitGroupReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberExitGroup not implemented")
}

func RegisterGroupServer(s *grpc.Server, srv GroupServer) {
	s.RegisterService(&_Group_serviceDesc, srv)
}

func _Group_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).CreateGroup(ctx, req.(*CreateGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_GetGroupList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).GetGroupList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/GetGroupList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).GetGroupList(ctx, req.(*GetGroupListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_GetGroupInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).GetGroupInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/GetGroupInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).GetGroupInfo(ctx, req.(*GetGroupInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_DeleteGroupMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGroupMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).DeleteGroupMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/DeleteGroupMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).DeleteGroupMember(ctx, req.(*DeleteGroupMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_SetGroupName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGroupNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).SetGroupName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/SetGroupName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).SetGroupName(ctx, req.(*SetGroupNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_SetGroupBulletin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGroupBulletinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).SetGroupBulletin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/SetGroupBulletin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).SetGroupBulletin(ctx, req.(*SetGroupBulletinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_SetOwnerGroupNickName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetOwnerGroupNickNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).SetOwnerGroupNickName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/SetOwnerGroupNickName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).SetOwnerGroupNickName(ctx, req.(*SetOwnerGroupNickNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_SetGroupHeadImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGroupHeadImageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).SetGroupHeadImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/SetGroupHeadImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).SetGroupHeadImage(ctx, req.(*SetGroupHeadImageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_MemberExitGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberExitGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).MemberExitGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/group.group/MemberExitGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).MemberExitGroup(ctx, req.(*MemberExitGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Group_serviceDesc = grpc.ServiceDesc{
	ServiceName: "group.group",
	HandlerType: (*GroupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createGroup",
			Handler:    _Group_CreateGroup_Handler,
		},
		{
			MethodName: "getGroupList",
			Handler:    _Group_GetGroupList_Handler,
		},
		{
			MethodName: "getGroupInfo",
			Handler:    _Group_GetGroupInfo_Handler,
		},
		{
			MethodName: "deleteGroupMember",
			Handler:    _Group_DeleteGroupMember_Handler,
		},
		{
			MethodName: "setGroupName",
			Handler:    _Group_SetGroupName_Handler,
		},
		{
			MethodName: "setGroupBulletin",
			Handler:    _Group_SetGroupBulletin_Handler,
		},
		{
			MethodName: "setOwnerGroupNickName",
			Handler:    _Group_SetOwnerGroupNickName_Handler,
		},
		{
			MethodName: "setGroupHeadImage",
			Handler:    _Group_SetGroupHeadImage_Handler,
		},
		{
			MethodName: "memberExitGroup",
			Handler:    _Group_MemberExitGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "group/group.proto",
}
