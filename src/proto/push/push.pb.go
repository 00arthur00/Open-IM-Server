// Code generated by protoc-gen-go. DO NOT EDIT.
// source: push/push.proto

package pbPush

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PushMsgReq struct {
	SendID               string   `protobuf:"bytes,1,opt,name=SendID,proto3" json:"SendID,omitempty"`
	RecvID               string   `protobuf:"bytes,2,opt,name=RecvID,proto3" json:"RecvID,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	RecvSeq              int64    `protobuf:"varint,4,opt,name=RecvSeq,proto3" json:"RecvSeq,omitempty"`
	SendTime             int64    `protobuf:"varint,5,opt,name=SendTime,proto3" json:"SendTime,omitempty"`
	MsgFrom              int32    `protobuf:"varint,6,opt,name=MsgFrom,proto3" json:"MsgFrom,omitempty"`
	ContentType          int32    `protobuf:"varint,7,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	SessionType          int32    `protobuf:"varint,8,opt,name=SessionType,proto3" json:"SessionType,omitempty"`
	OperationID          string   `protobuf:"bytes,9,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	MsgID                string   `protobuf:"bytes,10,opt,name=MsgID,proto3" json:"MsgID,omitempty"`
	OfflineInfo          string   `protobuf:"bytes,11,opt,name=OfflineInfo,proto3" json:"OfflineInfo,omitempty"`
	Options              string   `protobuf:"bytes,12,opt,name=Options,proto3" json:"Options,omitempty"`
	PlatformID           int32    `protobuf:"varint,13,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`
	IsEmphasize          bool     `protobuf:"varint,14,opt,name=IsEmphasize,proto3" json:"IsEmphasize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushMsgReq) Reset()         { *m = PushMsgReq{} }
func (m *PushMsgReq) String() string { return proto.CompactTextString(m) }
func (*PushMsgReq) ProtoMessage()    {}
func (*PushMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae0042da44e9a7a7, []int{0}
}

func (m *PushMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMsgReq.Unmarshal(m, b)
}
func (m *PushMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMsgReq.Marshal(b, m, deterministic)
}
func (m *PushMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMsgReq.Merge(m, src)
}
func (m *PushMsgReq) XXX_Size() int {
	return xxx_messageInfo_PushMsgReq.Size(m)
}
func (m *PushMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_PushMsgReq proto.InternalMessageInfo

func (m *PushMsgReq) GetSendID() string {
	if m != nil {
		return m.SendID
	}
	return ""
}

func (m *PushMsgReq) GetRecvID() string {
	if m != nil {
		return m.RecvID
	}
	return ""
}

func (m *PushMsgReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *PushMsgReq) GetRecvSeq() int64 {
	if m != nil {
		return m.RecvSeq
	}
	return 0
}

func (m *PushMsgReq) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *PushMsgReq) GetMsgFrom() int32 {
	if m != nil {
		return m.MsgFrom
	}
	return 0
}

func (m *PushMsgReq) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *PushMsgReq) GetSessionType() int32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *PushMsgReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *PushMsgReq) GetMsgID() string {
	if m != nil {
		return m.MsgID
	}
	return ""
}

func (m *PushMsgReq) GetOfflineInfo() string {
	if m != nil {
		return m.OfflineInfo
	}
	return ""
}

func (m *PushMsgReq) GetOptions() string {
	if m != nil {
		return m.Options
	}
	return ""
}

func (m *PushMsgReq) GetPlatformID() int32 {
	if m != nil {
		return m.PlatformID
	}
	return 0
}

func (m *PushMsgReq) GetIsEmphasize() bool {
	if m != nil {
		return m.IsEmphasize
	}
	return false
}

type PushMsgResp struct {
	ResultCode           int32    `protobuf:"varint,1,opt,name=ResultCode,proto3" json:"ResultCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushMsgResp) Reset()         { *m = PushMsgResp{} }
func (m *PushMsgResp) String() string { return proto.CompactTextString(m) }
func (*PushMsgResp) ProtoMessage()    {}
func (*PushMsgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae0042da44e9a7a7, []int{1}
}

func (m *PushMsgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMsgResp.Unmarshal(m, b)
}
func (m *PushMsgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMsgResp.Marshal(b, m, deterministic)
}
func (m *PushMsgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMsgResp.Merge(m, src)
}
func (m *PushMsgResp) XXX_Size() int {
	return xxx_messageInfo_PushMsgResp.Size(m)
}
func (m *PushMsgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMsgResp.DiscardUnknown(m)
}

var xxx_messageInfo_PushMsgResp proto.InternalMessageInfo

func (m *PushMsgResp) GetResultCode() int32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func init() {
	proto.RegisterType((*PushMsgReq)(nil), "push.PushMsgReq")
	proto.RegisterType((*PushMsgResp)(nil), "push.PushMsgResp")
}

func init() { proto.RegisterFile("push/push.proto", fileDescriptor_ae0042da44e9a7a7) }

var fileDescriptor_ae0042da44e9a7a7 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4d, 0x6b, 0xf2, 0x40,
	0x14, 0x85, 0xc9, 0xab, 0xf1, 0x63, 0xf2, 0x6a, 0xdb, 0xa1, 0x94, 0x8b, 0x8b, 0x12, 0x5c, 0x65,
	0x53, 0x0b, 0xed, 0xb2, 0x9b, 0x52, 0xd3, 0x42, 0x16, 0xa2, 0x4c, 0x5c, 0x75, 0xe7, 0xc7, 0x8d,
	0x06, 0xcc, 0xcc, 0x98, 0x89, 0x42, 0xfb, 0x6b, 0xfa, 0x53, 0xcb, 0x9d, 0x44, 0x0d, 0xdd, 0x88,
	0xe7, 0x39, 0xe7, 0x1e, 0x2e, 0xb9, 0xc3, 0xae, 0xf4, 0xc1, 0x6c, 0x1f, 0xe9, 0x67, 0xa4, 0x73,
	0x55, 0x28, 0xde, 0xa4, 0xff, 0xc3, 0x9f, 0x06, 0x63, 0xb3, 0x83, 0xd9, 0x4e, 0xcc, 0x46, 0xe0,
	0x9e, 0xdf, 0xb1, 0x56, 0x8c, 0x72, 0x1d, 0x85, 0xe0, 0xf8, 0x4e, 0xd0, 0x15, 0x95, 0x22, 0x2e,
	0x70, 0x75, 0x8c, 0x42, 0xf8, 0x57, 0xf2, 0x52, 0x71, 0x60, 0xed, 0xb1, 0x92, 0x05, 0xca, 0x02,
	0x1a, 0xd6, 0x38, 0x49, 0x72, 0x28, 0x13, 0xe3, 0x1e, 0x9a, 0xbe, 0x13, 0x34, 0xc4, 0x49, 0xf2,
	0x01, 0xeb, 0x50, 0xeb, 0x3c, 0xcd, 0x10, 0x5c, 0x6b, 0x9d, 0x35, 0x4d, 0x4d, 0xcc, 0xe6, 0x23,
	0x57, 0x19, 0xb4, 0x7c, 0x27, 0x70, 0xc5, 0x49, 0x72, 0x9f, 0x79, 0x55, 0xf5, 0xfc, 0x4b, 0x23,
	0xb4, 0xad, 0x5b, 0x47, 0x94, 0x88, 0xd1, 0x98, 0x54, 0x49, 0x9b, 0xe8, 0x94, 0x89, 0x1a, 0xa2,
	0xc4, 0x54, 0x63, 0xbe, 0x28, 0x52, 0x25, 0xa3, 0x10, 0xba, 0x76, 0xe3, 0x3a, 0xe2, 0xb7, 0xcc,
	0x9d, 0x98, 0x4d, 0x14, 0x02, 0xb3, 0x5e, 0x29, 0xec, 0x5c, 0x92, 0xec, 0x52, 0x89, 0x91, 0x4c,
	0x14, 0x78, 0xd5, 0xdc, 0x05, 0xd1, 0xde, 0x53, 0x4d, 0x1d, 0x06, 0xfe, 0x97, 0xdf, 0xa1, 0x92,
	0xfc, 0x9e, 0xb1, 0xd9, 0x6e, 0x51, 0x24, 0x2a, 0xcf, 0xa2, 0x10, 0x7a, 0x76, 0xa9, 0x1a, 0xa1,
	0xee, 0xc8, 0xbc, 0x67, 0x7a, 0xbb, 0x30, 0xe9, 0x37, 0x42, 0xdf, 0x77, 0x82, 0x8e, 0xa8, 0xa3,
	0xe1, 0x03, 0xf3, 0xce, 0x17, 0x32, 0x9a, 0x0a, 0x05, 0x9a, 0xc3, 0xae, 0x18, 0xab, 0x35, 0xda,
	0x33, 0xb9, 0xa2, 0x46, 0x9e, 0x5e, 0x59, 0xbf, 0x8a, 0xc7, 0x98, 0x1f, 0xd3, 0x15, 0xf2, 0x11,
	0x6b, 0x57, 0x84, 0x5f, 0x8f, 0xec, 0x0b, 0xb8, 0x5c, 0x7c, 0x70, 0xf3, 0x87, 0x18, 0xfd, 0xd6,
	0xfb, 0xf4, 0x88, 0xbd, 0xe8, 0x25, 0xd1, 0x65, 0xcb, 0xbe, 0x97, 0xe7, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x20, 0x4b, 0x09, 0x6a, 0x42, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushMsgServiceClient is the client API for PushMsgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushMsgServiceClient interface {
	PushMsg(ctx context.Context, in *PushMsgReq, opts ...grpc.CallOption) (*PushMsgResp, error)
}

type pushMsgServiceClient struct {
	cc *grpc.ClientConn
}

func NewPushMsgServiceClient(cc *grpc.ClientConn) PushMsgServiceClient {
	return &pushMsgServiceClient{cc}
}

func (c *pushMsgServiceClient) PushMsg(ctx context.Context, in *PushMsgReq, opts ...grpc.CallOption) (*PushMsgResp, error) {
	out := new(PushMsgResp)
	err := c.cc.Invoke(ctx, "/push.PushMsgService/PushMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushMsgServiceServer is the server API for PushMsgService service.
type PushMsgServiceServer interface {
	PushMsg(context.Context, *PushMsgReq) (*PushMsgResp, error)
}

// UnimplementedPushMsgServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPushMsgServiceServer struct {
}

func (*UnimplementedPushMsgServiceServer) PushMsg(ctx context.Context, req *PushMsgReq) (*PushMsgResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushMsg not implemented")
}

func RegisterPushMsgServiceServer(s *grpc.Server, srv PushMsgServiceServer) {
	s.RegisterService(&_PushMsgService_serviceDesc, srv)
}

func _PushMsgService_PushMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushMsgServiceServer).PushMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushMsgService/PushMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushMsgServiceServer).PushMsg(ctx, req.(*PushMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushMsgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "push.PushMsgService",
	HandlerType: (*PushMsgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushMsg",
			Handler:    _PushMsgService_PushMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "push/push.proto",
}
